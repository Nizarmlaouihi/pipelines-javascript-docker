trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'docker'  
        repository: 'nizarmlaouihi/my-repo'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

- stage: Deploy
  displayName: Deploy to AKS with LoadBalancer
  jobs:
  - job: Deploy
    displayName: Deploy to AKS
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: KubectlInstaller@0
      inputs:
        kubectlVersion: 'latest'

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'java-docker-test'
        namespace: 'test'
        command: 'apply'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Others'
        arguments: '-f ./deployment.yaml'

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'java-docker-test'
        namespace: 'test'
        command: 'apply'
        arguments: '-f ./service.yaml'  # Assuming your service.yaml defines a LoadBalancer
